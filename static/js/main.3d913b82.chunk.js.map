{"version":3,"sources":["donation_wechat.jpg","wechat_group_qr.jpg","wechat_qr.jpg","case_number_format.png","monetization.jpg","venmo.png","scraper lazy /^/.//data_center_year_code_day_serial_.*/.json$/ groupOptions: {} namespace object","scraper lazy /^/.//data_center_year_day_code_serial_.*/.json$/ groupOptions: {} namespace object","App.tsx","Comments.tsx","index.tsx"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","statusMap","Map","getColor","s","Immutable","get","ColorHash","hex","App","selectedForm","URL","window","location","href","searchParams","selectedCenter","mode","selectedFy","useState","selectedUpdateDay","setSelectedUpdateDay","caseData","setCaseData","transitioningData","setTransitioningData","setSearchParam","key","value","url","set","search","toString","useEffect","a","includes","default","entries","useMemo","List","flatMap","counts","split","center","year","day","form","status","count","updateDay","groupBy","v","toList","toArray","lodash","selectedEntriesAllDate","filter","availableUpdateDays","Number","parseInt","toSet","sort","latestUpdateDay","max","selectedEntries","formTypes","length","centerNames","statusCount","countBy","x","existStatus","sortBy","exisitDays","dataset","reduce","counter","toObject","b","previousDayCount","todayCount","datasetWithBackfill","find","totalCountToday","cnt","k","processedTransitioningData","format","from","to","trans","toMap","valueSeq","Transitioning","i","style","color","display","sumToday","Array","values","TotalCountToday","toFixed","maxBarHeight","barChart","height","width","data","layout","strokeDasharray","type","dataKey","domain","tickFormatter","padStart","min","tick","fontSize","interval","allowDecimals","ticks","offset","content","payload","label","todayTotal","prevdayTotal","backgroundColor","p","ind","prevDay","fill","marginBottom","itemSorter","indexOf","nullthrows","isAnimationActive","stackId","introduction","Date","toDateString","target","rel","updateDayPicker","Grid","item","xs","Slider","marginLeft","marginRight","defaultValue","onChange","_","f","aria-labelledby","valueLabelDisplay","step","marks","getMonth","getDate","formTypeSelector","FormControl","fullWidth","component","FormLabel","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","modeSelector","centerSelector","fySelector","Comments","QA","src","Venmo","alt","Monetization","CaseNumberFormat","WeChatDonation","WechatQR","WechatGroupQR","facebookCommentPlugin","appId","orderBy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d913b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donation_wechat.84e04efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_group_qr.b70b83ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_qr.6a2dd925.jpg\";","module.exports = __webpack_public_path__ + \"static/media/case_number_format.e778d75a.png\";","module.exports = __webpack_public_path__ + \"static/media/monetization.b7e75b32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/venmo.76bf9850.png\";","var map = {\n\t\"./data_center_year_code_day_serial_21.json\": [\n\t\t447,\n\t\t3\n\t],\n\t\"./data_center_year_code_day_serial_22.json\": [\n\t\t448,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 412;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./data_center_year_day_code_serial_21.json\": [\n\t\t449,\n\t\t5\n\t],\n\t\"./data_center_year_day_code_serial_22.json\": [\n\t\t450,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 413;\nmodule.exports = webpackAsyncContext;","import ColorHash from \"color-hash\";\nimport Immutable from \"immutable\";\nimport nullthrows from \"nullthrows\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport * as lodash from \"lodash\";\n\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ContentRenderer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  TooltipProps,\n} from \"recharts\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { transform } from \"lodash\";\n\n\ntype FY = \"20\" | \"21\";\nconst statusMap = new Map([\n  [\"Case Was Approved And My Decision Was Emailed\", \"Case Was Approved\"],\n  [\"Case Was Received and A Receipt Notice Was Emailed\", \"Case Was Received\"],\n  [\"Case Was Received and A Receipt Notice Was Sent\", \"Case Was Received\"],\n  [\n    \"Request for Initial Evidence Was Sent\",\n    \"Request for Additional Evidence Was Sent\",\n  ],\n  [\n    \"Case Was Transferred And A New Office Has Jurisdiction\",\n    \"Case Transferred And New Office Has Jurisdiction\",\n  ],\n]);\n\nfunction getColor(s: string): string {\n  return (\n    Immutable.Map([\n      [\"Case Was Received\", \"#999900\"],\n      [\"Case Was Approved\", \"#00FF00\"],\n      [\"Request for Additional Evidence Was Sent\", \"#FF0000\"],\n    ]).get(s) ?? new ColorHash().hex(s)\n  );\n}\n\nconst App: React.FC<{}> = () => {\n  const selectedForm =\n    new URL(window.location.href).searchParams.get(\"form\") ?? \"I-129\";\n  const selectedCenter =\n    new URL(window.location.href).searchParams.get(\"center\") ?? \"WAC\";\n  const mode = new URL(window.location.href).searchParams.get(\"mode\") ?? \"data_center_year_code_day_serial\";\n  const selectedFy = new URL(window.location.href).searchParams.get(\"fy\");\n\n  const [selectedUpdateDay, setSelectedUpdateDay] = useState<string | null>(\n    null\n  );\n  const [caseData, setCaseData] = useState<{ [key: string]: { [day: string]: number; }; }>({});\n  const [transitioningData, setTransitioningData] = useState<{ [day: string]: { [index: string]: number; }; }>({});\n\n\n  const setSearchParam = (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    const searchParams = url.searchParams;\n    searchParams.set(key, value);\n    url.search = searchParams.toString();\n    window.location.href = url.toString();\n  };\n\n  const url = new URL(window.location.href);\n\n  useEffect(() => {\n    (async () => {\n      if (!url.searchParams.get(\"fy\")) {\n        setSearchParam(\"fy\", \"21\");\n      }\n      if (!url.searchParams.get(\"form\")) {\n        setSearchParam(\"form\", \"I-129\");\n      }\n      if (!url.searchParams.get(\"center\")) {\n        setSearchParam(\"center\", \"WAC\");\n      }\n      if (!url.searchParams.get(\"mode\") && url.searchParams.get(\"form\")) {\n        setSearchParam(\"mode\", [\"I-485\", \"I-140\"].includes(url.searchParams.get(\"form\")!) ? \"data_center_year_code_day_serial\" : \"data_center_year_day_code_serial\");\n      }\n      if (url.searchParams.get(\"form\") && url.searchParams.get(\"center\") && url.searchParams.get(\"mode\")) {\n        setTransitioningData((await (await import('./scraper/transitioning_1.json')).default));\n        if (mode === 'data_center_year_code_day_serial') {\n          setCaseData(((await import('./scraper/data_center_year_code_day_serial_' + selectedFy + '.json')).default));\n        } else {\n          setCaseData(((await import('./scraper/data_center_year_day_code_serial_' + selectedFy + '.json')).default));\n        }\n      }\n    })();\n  }, [mode, selectedFy, url.searchParams]);\n\n  const entries = useMemo(() => {\n    return Immutable.List(\n      Object.entries(caseData).flatMap(([key, counts]) => {\n        const [center, year, day, code, form, status] = key.split(\"|\");\n        return Object.entries(counts).map((count) => {\n          return {\n            center,\n            year,\n            day,\n            code,\n            form,\n            status,\n            updateDay: count[0] as string,\n            count: count[1] as number,\n          };\n        });\n      })\n    )\n      .groupBy(\n        (v) =>\n          v.center +\n          v.year +\n          v.day +\n          v.code +\n          v.form +\n          (statusMap.get(v.status) ?? v.status) +\n          v.updateDay\n      )\n      .map((v) => v.toList().toArray())\n      .map((v) => {\n        return {\n          center: v[0].center,\n          year: v[0].year,\n          day: v[0].day,\n          code: v[0].code,\n          form: v[0].form,\n          status: statusMap.get(v[0].status) ?? v[0].status,\n          updateDay: v[0].updateDay,\n          count: lodash.sumBy(v, (v) => v.count) as number,\n        };\n      })\n      .toList();\n  }, [caseData]);\n\n\n  const selectedEntriesAllDate = useMemo(\n    () =>\n      entries.filter(\n        (e) => e.form === selectedForm && e.center === selectedCenter\n      ),\n    [entries, selectedForm, selectedCenter]\n  );\n\n  const availableUpdateDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.updateDay))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n\n  const latestUpdateDay = useMemo(\n    () => selectedEntriesAllDate.map((e) => Number.parseInt(e.updateDay)).max(),\n    [selectedEntriesAllDate]\n  );\n\n  const selectedEntries = useMemo(\n    () =>\n      selectedEntriesAllDate.filter(\n        (e) =>\n          e.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()\n      ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const formTypes = useMemo(() => entries.map((e) => e.form).toSet()\n    .filter(e => e && e.length > 0), [\n    entries,\n  ]);\n  const centerNames = useMemo(() => entries.map((e) => e.center).toSet()\n    .filter(e => e && e.length > 0 && e !== 'default'), [\n    entries,\n  ]);\n\n  const statusCount = useMemo(\n    () => selectedEntriesAllDate.countBy((x) => x.status),\n    [selectedEntriesAllDate]\n  );\n  const existStatus = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.status)\n        .toSet()\n        .toList()\n        .sortBy((s) => -(statusCount.get(s) ?? 0)),\n    [selectedEntriesAllDate, statusCount]\n  );\n\n  const exisitDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.day))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const dataset = useMemo(\n    () =>\n      selectedEntries\n        .groupBy((e) => e.day)\n        .map((e, day) => {\n          return {\n            day,\n            ...e\n              .reduce(\n                (counter, v) => counter.set(v.status, v.count),\n                Immutable.Map<string, number>()\n              )\n              .toObject(),\n          };\n        })\n        .toList()\n        .sort((a, b) => Number.parseInt(a.day) - Number.parseInt(b.day))\n        .toArray(),\n    [selectedEntries]\n  );\n\n  const previousDayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay ===\n            (Number.parseInt((selectedUpdateDay ?? latestUpdateDay)?.toString() ?? \"0\") - 1).toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const todayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const datasetWithBackfill = useMemo(\n    () =>\n      exisitDays\n        .map(\n          (day) =>\n            dataset.find((v) => v.day === day.toString()) ?? {\n              day: day.toString(),\n            }\n        )\n        .toArray(),\n    [exisitDays, dataset]\n  );\n\n  const totalCountToday: Map<String, number> = new Map();\n  for (const cnt of datasetWithBackfill) {\n    for (const [k, v] of Object.entries(cnt)) {\n      if (k === 'day') continue;\n      totalCountToday.set(k, Number.parseInt(v) + (totalCountToday.get(k) ?? 0));\n    }\n  }\n\n  const all = false;\n  const processedTransitioningData = Immutable.List(all ?\n    Object.values(transitioningData).map(v => Object.entries(v)).flat() :\n    Object.entries(transitioningData[(selectedUpdateDay ?? latestUpdateDay) ?? \"\"] ?? {}))\n    .map(([key, count]) => {\n      const [format, form, center, year, code, day, from, to] = key.split(\"|\");\n      return { format, form, center, year, code, day, from, to, count };\n    })\n    .filter(trans => trans.year === selectedFy && trans.center === selectedCenter && trans.form === selectedForm && (\"data_\" + trans.format) === url.searchParams.get(\"mode\"))\n    .groupBy(trans => trans.from + trans.to)\n    .toMap()\n    .map(v => v.valueSeq().toList())\n    .valueSeq()\n    .toList()\n    .map(trans => {\n      return {\n        from: trans.get(0)!.from,\n        to: trans.get(0)!.to,\n        count: lodash.sumBy(trans.toArray(), t => t.count)\n      };\n    })\n    .toArray();\n\n  const Transitioning = <div>\n    {processedTransitioningData.sort((a, b) => b.count - a.count)\n      .map((trans, i) => {\n        return <div key={i}>\n          <div style={{ color: getColor(trans.from), display: 'inline' }}>{trans.from}</div>\n          <b>{\" => \"}</b>\n          <div style={{ color: getColor(trans.to), display: 'inline' }}>{trans.to}</div>\n          <b>{\" : \" + trans.count}</b></div>;\n      })}\n  </div>;\n\n\n  const sumToday = lodash.sum(Array.from(totalCountToday.values()));\n  const TotalCountToday = <div>\n    <h3>Total for {selectedCenter} and {selectedForm} on your selected date</h3>\n    <h4>Transitioning</h4>\n    {Transitioning}\n    <br />\n    <h4>Total Counts:</h4>\n    {Array.from(totalCountToday).sort((a, b) => b[1] - a[1]).map(([k, v], i) => <div key={i} style={{ color: getColor(k as string) }}>\n      {k} : {v}, {(v * 100 / sumToday).toFixed(2)}%\n    </div>)}\n    <div><b>Total: {sumToday}</b></div>\n  </div>;\n\n\n  const maxBarHeight = useMemo(\n    () =>\n      todayCount.valueSeq().map(v => lodash.sum(v.valueSeq().toArray())).max(),\n    [todayCount]\n  );\n\n  const barChart = useMemo(() => {\n    const CustomTooltip: ContentRenderer<TooltipProps> = ({\n      payload,\n      label,\n    }) => {\n      const todayTotal =\n        todayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n      const prevdayTotal =\n        previousDayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n\n      return (\n        <div style={{ backgroundColor: \"#F0F8FF\" }}>\n          <p>{`${label}`}</p>\n          {(payload ?? []).map((p, ind) => {\n            const prevDay = (previousDayCount\n              .get(label as string)\n              ?.get(p.dataKey as string) ?? 0) as number;\n            return (\n              <p key={ind} style={{ color: p.fill, marginBottom: \"3px\" }}>{`${p.dataKey\n                }: ${p.value} of ${todayTotal} (${(\n                  (100 * (p.value as number)) /\n                  todayTotal\n                ).toFixed(\n                  2\n                )}%), Previous day: ${prevDay} of ${prevdayTotal},  (${(\n                  (100 * prevDay) /\n                  prevdayTotal\n                ).toFixed(2)}%)`}</p>\n            );\n          })}\n        </div>\n      );\n    };\n\n    return (\n      <BarChart\n        height={1440}\n        width={810}\n        data={datasetWithBackfill}\n        layout=\"vertical\"\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          type=\"number\"\n          dataKey=\"day\"\n          domain={[0, maxBarHeight ?? 1]}\n        />\n        <YAxis\n          type=\"category\"\n          dataKey=\"day\"\n          width={150}\n          tickFormatter={day => mode === 'data_center_year_code_day_serial' ? selectedCenter + selectedFy + \"9\" + day.toString().padStart(3, \"0\") + \"XXXX\" : selectedCenter + selectedFy + day.toString().padStart(3, \"0\") + \"5XXXX\"}\n          domain={[(exisitDays.min() ?? 0) - 1, (exisitDays.max() ?? 1) + 1]}\n          tick={{ fontSize: \"6\" }}\n          interval={0}\n          allowDecimals={true}\n          ticks={exisitDays.toArray()}\n        />\n        <Tooltip\n          offset={100}\n          content={CustomTooltip}\n          itemSorter={(a) =>\n            -existStatus.indexOf(nullthrows(a.dataKey) as string)\n          }\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Bar\n            key={ind}\n            isAnimationActive={false}\n            dataKey={s}\n            stackId=\"a\"\n            fill={getColor(s)}\n          />\n        ))}\n      </BarChart>\n    );\n  }, [datasetWithBackfill, maxBarHeight, exisitDays, existStatus, todayCount, previousDayCount, mode, selectedCenter, selectedFy]);\n\n  const introduction = (\n    <div>\n      <h1>USCIS case progress tracker</h1>\n      <p>\n        Current Form: <strong>{selectedForm}</strong>,<br /> location:{\" \"}\n        <strong>{selectedCenter}</strong>,\n        <br />\n        Case number mode: <strong>{mode}</strong>\n        <br /> Last Update for this form and\n        location:\n        <strong>\n          {latestUpdateDay\n            ? new Date(\n              86400000 * latestUpdateDay + 3600 * 1000 * 7\n            ).toDateString()\n            : \"Not Exist currently\"}\n        </strong>\n      </p>\n      <h3>Help needed for UI and clawer</h3>\n      <p>\n        GitHub project:\n        <a\n          href=\"https://github.com/vicdus/uscis-case-statistics/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://github.com/vicdus/uscis-case-statistics/\n        </a>\n      </p>\n    </div>\n  );\n\n  const updateDayPicker = availableUpdateDays.max() ? (\n    <Grid item xs={8}>\n      <Slider\n        style={{ marginLeft: \"128px\", marginRight: \"128px\" }}\n        defaultValue={availableUpdateDays.max() ?? 1}\n        onChange={(_, f) => setSelectedUpdateDay(f.toString())}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={null}\n        marks={availableUpdateDays\n          .map((e) => ({\n            value: e,\n            label:\n              1 +\n              new Date(86400000 * e + 3600 * 1000 * 7).getMonth() +\n              \"/\" +\n              new Date(86400000 * e + 3600 * 1000 * 7).getDate(),\n          }))\n          .toArray()}\n        min={availableUpdateDays.min() ?? 0}\n        max={availableUpdateDays.max() ?? 1}\n      />\n    </Grid>\n  ) : null;\n\n\n  const formTypeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Form Type  <p style={{ color: 'red' }}><strong> (Note: Check 'unknown' type for card-mailed I-485/I-765 case 已发卡的I-485/I-765 会被归类为unknwon 由于发卡后无法从USCIS得知表格类型)   </strong></p>  </FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedForm}\n        onChange={(e) => setSearchParam(\"form\", e.target.value)}\n        row={true}\n      >\n        {formTypes\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n\n  const modeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\"><p style={{ color: 'red' }}><strong>Format of case number(Try both if your case number format looks different 如果case number格式看起来不对请尝试改变此选项)</strong></p> </FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={mode}\n        onChange={(e) => setSearchParam(\"mode\", e.target.value)}\n        row={true}\n      >\n        {['data_center_year_day_code_serial', 'data_center_year_code_day_serial']\n          .map((v, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={v}\n              control={<Radio />}\n              label={v}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const centerSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Center</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedCenter}\n        onChange={(e) => setSearchParam(\"center\", e.target.value)}\n        row={true}\n      >\n        {centerNames\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const fySelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Fiscal Year</FormLabel>\n      <RadioGroup\n        aria-label=\"fy\"\n        name=\"fy\"\n        value={selectedFy}\n        onChange={(e) => setSearchParam(\"fy\", e.target.value)}\n        row={true}\n      >\n        {[\"21\", \"22\"]\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  return (\n    <div>\n      {introduction}\n      {fySelector}\n      {formTypeSelector}\n      {centerSelector}\n      {modeSelector}\n      {updateDayPicker}\n      {barChart}\n      {updateDayPicker}\n      {TotalCountToday}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\n// @ts-ignore\nimport { Comments as FBComments, FacebookProvider } from \"react-facebook\";\nimport WeChatDonation from \"./donation_wechat.jpg\";\nimport WechatGroupQR from \"./wechat_group_qr.jpg\";\nimport WechatQR from \"./wechat_qr.jpg\";\nimport CaseNumberFormat from \"./case_number_format.png\";\nimport Monetization from './monetization.jpg';\nimport Venmo from './venmo.png';\n\nconst Comments: React.FC<{}> = () => {\n    const QA = (\n        <div>\n            <h2>捐赠是维持这个项目运营的唯一收入来源🙏</h2>\n            <img\n                src={Venmo}\n                alt=\"venmo\"\n                style={{ width: \"350px\", height: \"350px\" }}\n            />\n            <img\n                src={Monetization}\n                alt=\"none\"\n                style={{ width: \"486px\", height: \"303px\" }}\n            />\n            <h3>Q and A</h3>\n            <h4>Q: 怎么用？</h4>\n            <p>A: 横坐标是号段，纵坐标是状态对应的数量。</p>\n            <h4>Q: 什么是号段？</h4>\n            <p>A: 这张图里的working day number</p>\n            <img\n                src={CaseNumberFormat}\n                alt=\"wechat_donation\"\n                style={{ width: \"472px\", height: \"200px\" }}\n            />\n            <h4>Q: 你是谁？</h4>\n            <p>A: 我今年抽中了h1b, 在等approve</p>\n            <h4>Q: 数据来源？</h4>\n            <p>A: 枚举号段下所有可能的case number并爬取USCIS, 保存成文件</p>\n            <h4>Q: 一般什么时候更新数据？</h4>\n            <p>\n                A:\n                通常美西第二天凌晨更新前一个工作日的数据，取决于uscis是否抽风以及我晚上是否喝大了忘记跑更新脚本（手动狗头\n            </p>\n            <h4>Q: 为什么是文件？为什么不用数据库？</h4>\n            <p>A: 贫穷, github deploy静态网页不要钱</p>\n            <h4>Q: 这个很有用，可以请你喝杯咖啡吗？</h4>\n            <p>A: 感谢！</p>\n            <img\n                src={WeChatDonation}\n                alt=\"wechat_donation\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n\n            <h4>Q: 我想和你聊一聊？</h4>\n            <p>A: 加我微信吧！</p>\n            <img\n                src={WechatQR}\n                alt=\"wechat\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n            <h4>Q: 还有别的问题想讨论？</h4>\n            <p>\n                A: 微信群和\n                <a\n                    href=\"https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=636011\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    一亩三分地的帖子\n                </a>\n                ，请帮我加点大米：）\n            </p>\n            <img\n                src={WechatGroupQR}\n                alt=\"wechat_group\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n        </div>\n    );\n\n    const facebookCommentPlugin = (\n        <FacebookProvider appId=\"185533902045623\">\n            <FBComments orderBy=\"reverse_time\" href=\"https://vicdus.github.io/uscis-case-statistics/\" />\n        </FacebookProvider>\n    );\n\n    return (\n        <div>\n            {QA}\n            {facebookCommentPlugin}\n        </div>\n    );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Comments from \"./Comments\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Comments />\n  </React.StrictMode>,\n  document.getElementById(\"comments\")\n);\n"],"sourceRoot":""}