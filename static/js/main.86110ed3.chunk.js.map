{"version":3,"sources":["donation_wechat.jpg","wechat_group_qr.jpg","wechat_qr.jpg","App.tsx","index.tsx"],"names":["module","exports","statusMap","Map","getColor","s","Immutable","get","ColorHash","hex","App","selectedForm","URL","window","location","href","searchParams","selectedCenter","mode","useState","selectedUpdateDay","setSelectedUpdateDay","caseData","setCaseData","setSearchParam","key","value","url","set","search","toString","useEffect","a","includes","casedata_b64","content","JSON","parse","pako","inflate","Uint8Array","atob","split","map","x","charCodeAt","to","entries","useMemo","List","Object","flatMap","counts","center","year","day","code","form","status","count","updateDay","groupBy","v","toList","toArray","lodash","selectedEntriesAllDate","filter","e","availableUpdateDays","Number","parseInt","toSet","sort","latestUpdateDay","max","selectedEntries","formTypes","length","centerNames","statusCount","countBy","existStatus","sortBy","exisitDays","dataset","reduce","counter","toObject","b","previousDayCount","size","todayCount","datasetWithBackfill","find","maxBarHeight","valueSeq","barChart","height","width","data","layout","strokeDasharray","type","dataKey","domain","tickFormatter","padStart","min","tick","fontSize","interval","allowDecimals","ticks","offset","payload","label","todayTotal","prevdayTotal","style","backgroundColor","p","ind","prevDay","color","fill","marginBottom","toFixed","itemSorter","indexOf","nullthrows","isAnimationActive","stackId","introduction","Date","toDateString","target","rel","updateDayPicker","Grid","item","xs","Slider","marginLeft","marginRight","defaultValue","onChange","_","f","aria-labelledby","valueLabelDisplay","step","marks","getMonth","getDate","QA","alt","src","WeChatDonation","WechatQR","WechatGroupQR","facebookCommentPlugin","appId","formTypeSelector","FormControl","fullWidth","component","FormLabel","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","modeSelector","centerSelector","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86110ed3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donation_wechat.84e04efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_group_qr.b70b83ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_qr.6a2dd925.jpg\";","import ColorHash from \"color-hash\";\nimport Immutable from \"immutable\";\nimport nullthrows from \"nullthrows\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport * as lodash from \"lodash\";\nimport pako from \"pako\";\n\n// @ts-ignore\nimport { Comments, FacebookProvider } from \"react-facebook\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ContentRenderer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  TooltipProps,\n} from \"recharts\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport WeChatDonation from \"./donation_wechat.jpg\";\nimport WechatGroupQR from \"./wechat_group_qr.jpg\";\nimport WechatQR from \"./wechat_qr.jpg\";\n\nconst statusMap = new Map([\n  [\"Case Was Approved And My Decision Was Emailed\", \"Case Was Approved\"],\n  [\"Case Was Received and A Receipt Notice Was Emailed\", \"Case Was Received\"],\n  [\"Case Was Received and A Receipt Notice Was Sent\", \"Case Was Received\"],\n  [\n    \"Request for Initial Evidence Was Sent\",\n    \"Request for Additional Evidence Was Sent\",\n  ],\n  [\n    \"Case Was Transferred And A New Office Has Jurisdiction\",\n    \"Case Transferred And New Office Has Jurisdiction\",\n  ],\n]);\n\nfunction getColor(s: string): string {\n  return (\n    Immutable.Map([\n      [\"Case Was Received\", \"#999900\"],\n      [\"Case Was Approved\", \"#00FF00\"],\n      [\"Request for Additional Evidence Was Sent\", \"#FF0000\"],\n    ]).get(s) ?? new ColorHash().hex(s)\n  );\n}\n\nconst App: React.FC<{}> = () => {\n  const selectedForm =\n    new URL(window.location.href).searchParams.get(\"form\") ?? \"I-129\";\n  const selectedCenter =\n    new URL(window.location.href).searchParams.get(\"center\") ?? \"WAC\";\n  const mode = new URL(window.location.href).searchParams.get(\"mode\") ?? \"data_center_year_code_day_serial\";\n\n  const [selectedUpdateDay, setSelectedUpdateDay] = useState<string | null>(\n    null\n  );\n  const [caseData, setCaseData] = useState<Object>({});\n\n  const setSearchParam = (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    const searchParams = url.searchParams;\n    searchParams.set(key, value);\n    url.search = searchParams.toString();\n    window.location.href = url.toString();\n  };\n\n  const url = new URL(window.location.href);\n\n  useEffect(() => {\n    (async () => {\n      if (!url.searchParams.get(\"form\")) {\n        setSearchParam(\"form\", \"I-129\");\n      }\n      if (!url.searchParams.get(\"center\")) {\n        setSearchParam(\"center\", \"WAC\");\n      }\n      if (!url.searchParams.get(\"mode\") && url.searchParams.get(\"form\")) {\n        setSearchParam(\"mode\", [\"I-485\", \"I-140\"].includes(url.searchParams.get(\"form\")!) ? \"data_center_year_code_day_serial\" : \"data_center_year_day_code_serial\");\n      }\n      if (url.searchParams.get(\"form\") && url.searchParams.get(\"center\") && url.searchParams.get(\"mode\")) {\n        let casedata_b64: string;\n        if (mode === 'data_center_year_code_day_serial') {\n          casedata_b64 = (await import('./scraper/data_center_year_code_day_serial-compressed.json')).content;\n        } else {\n          casedata_b64 = (await import('./scraper/data_center_year_day_code_serial-compressed.json')).content;\n        }\n        setCaseData(JSON.parse(pako.inflate(new Uint8Array(atob(casedata_b64).split('').map(x => x.charCodeAt(0))), { to: 'string' })));\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const entries = useMemo(() => {\n    return Immutable.List(\n      Object.entries(caseData).flatMap(([key, counts]) => {\n        const [center, year, day, code, form, status] = key.split(\"|\");\n        return Object.entries(counts).map((count) => {\n          return {\n            center,\n            year,\n            day,\n            code,\n            form,\n            status,\n            updateDay: count[0] as string,\n            count: count[1] as number,\n          };\n        });\n      })\n    )\n      .groupBy(\n        (v) =>\n          v.center +\n          v.year +\n          v.day +\n          v.code +\n          v.form +\n          (statusMap.get(v.status) ?? v.status) +\n          v.updateDay\n      )\n      .map((v) => v.toList().toArray())\n      .map((v) => {\n        return {\n          center: v[0].center,\n          year: v[0].year,\n          day: v[0].day,\n          code: v[0].code,\n          form: v[0].form,\n          status: statusMap.get(v[0].status) ?? v[0].status,\n          updateDay: v[0].updateDay,\n          count: lodash.sumBy(v, (v) => v.count) as number,\n        };\n      })\n      .toList();\n  }, [caseData]);\n\n  const selectedEntriesAllDate = useMemo(\n    () =>\n      entries.filter(\n        (e) => e.form === selectedForm && e.center === selectedCenter\n      ),\n    [entries, selectedForm, selectedCenter]\n  );\n\n  const availableUpdateDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.updateDay))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n\n  const latestUpdateDay = useMemo(\n    () => selectedEntriesAllDate.map((e) => Number.parseInt(e.updateDay)).max(),\n    [selectedEntriesAllDate]\n  );\n\n  const selectedEntries = useMemo(\n    () =>\n      selectedEntriesAllDate.filter(\n        (e) =>\n          e.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()\n      ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const formTypes = useMemo(() => entries.map((e) => e.form).toSet()\n    .filter(e => e && e.length > 0), [\n    entries,\n  ]);\n  const centerNames = useMemo(() => entries.map((e) => e.center).toSet()\n    .filter(e => e && e.length > 0 && e !== 'default'), [\n    entries,\n  ]);\n\n  const statusCount = useMemo(\n    () => selectedEntriesAllDate.countBy((x) => x.status),\n    [selectedEntriesAllDate]\n  );\n  const existStatus = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.status)\n        .toSet()\n        .toList()\n        .sortBy((s) => -(statusCount.get(s) ?? 0)),\n    [selectedEntriesAllDate, statusCount]\n  );\n\n  const exisitDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.day))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const dataset = useMemo(\n    () =>\n      selectedEntries\n        .groupBy((e) => e.day)\n        .map((e, day) => {\n          return {\n            day,\n            ...e\n              .reduce(\n                (counter, v) => counter.set(v.status, v.count),\n                Immutable.Map<string, number>()\n              )\n              .toObject(),\n          };\n        })\n        .toList()\n        .sort((a, b) => Number.parseInt(a.day) - Number.parseInt(b.day))\n        .toArray(),\n    [selectedEntries]\n  );\n\n  const previousDayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay ===\n            availableUpdateDays.get(availableUpdateDays.size - 2)?.toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [availableUpdateDays, selectedEntriesAllDate]\n  );\n\n  const todayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay ===\n            availableUpdateDays.get(availableUpdateDays.size - 1)?.toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [availableUpdateDays, selectedEntriesAllDate]\n  );\n\n  const datasetWithBackfill = useMemo(\n    () =>\n      exisitDays\n        .map(\n          (day) =>\n            dataset.find((v) => v.day === day.toString()) ?? {\n              day: day.toString(),\n            }\n        )\n        .toArray(),\n    [exisitDays, dataset]\n  );\n\n  const maxBarHeight = useMemo(\n    () =>\n      todayCount.valueSeq().map(v => lodash.sum(v.valueSeq().toArray())).max(),\n    [todayCount]\n  );\n\n  const barChart = useMemo(() => {\n    const CustomTooltip: ContentRenderer<TooltipProps> = ({\n      payload,\n      label,\n    }) => {\n      const todayTotal =\n        todayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n      const prevdayTotal =\n        previousDayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n\n      return (\n        <div style={{ backgroundColor: \"#F0F8FF\" }}>\n          <p>{`${label}`}</p>\n          {(payload ?? []).map((p, ind) => {\n            const prevDay = (previousDayCount\n              .get(label as string)\n              ?.get(p.dataKey as string) ?? 0) as number;\n            return (\n              <p key={ind} style={{ color: p.fill, marginBottom: \"3px\" }}>{`${p.dataKey\n                }: ${p.value} of ${todayTotal} (${(\n                  (100 * (p.value as number)) /\n                  todayTotal\n                ).toFixed(\n                  2\n                )}%), Previous day: ${prevDay} of ${prevdayTotal},  (${(\n                  (100 * prevDay) /\n                  prevdayTotal\n                ).toFixed(2)}%)`}</p>\n            );\n          })}\n        </div>\n      );\n    };\n\n    return (\n      <BarChart\n        height={1440}\n        width={810}\n        data={datasetWithBackfill}\n        layout=\"vertical\"\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          type=\"number\"\n          dataKey=\"day\"\n          domain={[0, maxBarHeight ?? 1]}\n        />\n        <YAxis\n          type=\"category\"\n          dataKey=\"day\"\n          width={150}\n          tickFormatter={day => mode === 'data_center_year_code_day_serial' ? selectedCenter + \"219\" + day.toString().padStart(3, \"0\") + \"XXXX\" : selectedCenter + \"21\" + day.toString().padStart(3, \"0\") + \"5XXXX\"}\n          domain={[(exisitDays.min() ?? 0) - 1, (exisitDays.max() ?? 1) + 1]}\n          tick={{ fontSize: \"x-small\" }}\n          interval={0}\n          allowDecimals={true}\n          ticks={exisitDays.toArray()}\n        />\n        <Tooltip\n          offset={100}\n          content={CustomTooltip}\n          itemSorter={(a) =>\n            -existStatus.indexOf(nullthrows(a.dataKey) as string)\n          }\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Bar\n            key={ind}\n            isAnimationActive={false}\n            dataKey={s}\n            stackId=\"a\"\n            fill={getColor(s)}\n          />\n        ))}\n      </BarChart>\n    );\n  }, [datasetWithBackfill, maxBarHeight, exisitDays, existStatus, todayCount, previousDayCount, selectedCenter, mode]);\n\n  const introduction = (\n    <div>\n      <h1>USCIS case progress tracker</h1>\n      <p>\n        Current Form: <strong>{selectedForm}</strong>,<br /> location:{\" \"}\n        <strong>{selectedCenter}</strong>,\n        <br />\n        Case number mode: <strong>{mode}</strong>\n        <br /> Last Update for this form and\n        location:\n        <strong>\n          {latestUpdateDay\n            ? new Date(\n              86400000 * latestUpdateDay + 3600 * 1000 * 7\n            ).toDateString()\n            : \"Not Exist currently\"}\n        </strong>\n      </p>\n      <h3>Help needed for UI and clawer</h3>\n      <p>\n        GitHub project:\n        <a\n          href=\"https://github.com/vicdus/uscis-case-statistics/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://github.com/vicdus/uscis-case-statistics/\n        </a>\n      </p>\n    </div>\n  );\n\n  const updateDayPicker = availableUpdateDays.max() ? (\n    <Grid item xs={8}>\n      <Slider\n        style={{ marginLeft: \"128px\", marginRight: \"128px\" }}\n        defaultValue={availableUpdateDays.max() ?? 1}\n        onChange={(_, f) => setSelectedUpdateDay(f.toString())}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={null}\n        marks={availableUpdateDays\n          .map((e) => ({\n            value: e,\n            label:\n              1 +\n              new Date(86400000 * e + 3600 * 1000 * 7).getMonth() +\n              \"/\" +\n              new Date(86400000 * e + 3600 * 1000 * 7).getDate(),\n          }))\n          .toArray()}\n        min={availableUpdateDays.min() ?? 0}\n        max={availableUpdateDays.max() ?? 1}\n      />\n    </Grid>\n  ) : null;\n\n  const QA = (\n    <div>\n      <h3>Q and A</h3>\n      <h4>Q: 怎么用？</h4>\n      <p>A: 横坐标是号段，纵坐标是状态对应的数量。</p>\n      <h4>Q: 什么是号段？</h4>\n      <p>A: 这张图里的working day number</p>\n      <img\n        alt=\"day-explain\"\n        src=\"https://www.am22tech.com/wp-content/uploads/2018/12/uscis-receipt-number-status-i797-notice-truvisa.jpg\"\n      />\n      <h4>Q: 你是谁？</h4>\n      <p>A: 我今年抽中了h1b, 在等approve</p>\n      <h4>Q: 数据来源？</h4>\n      <p>A: 枚举号段下所有可能的case number并爬取USCIS, 保存成文件</p>\n      <h4>Q: 没有我的号段的数据？</h4>\n      <p>A: 可能需要地里大家一起来爬并更新，稍后放出步骤</p>\n      <h4>Q: 一般什么时候更新数据？</h4>\n      <p>\n        A:\n        通常美西第二天凌晨更新前一个工作日的数据，取决于uscis是否抽风以及我晚上是否喝大了忘记跑更新脚本（手动狗头\n      </p>\n      <h4>Q: 为什么是文件？为什么不用数据库？</h4>\n      <p>A: 贫穷, github deploy静态网页不要钱</p>\n      <h4>Q: 这个很有用，可以请你喝杯咖啡吗？</h4>\n      <p>A: 感谢！</p>\n      <img\n        src={WeChatDonation}\n        alt=\"wechat_donation\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n\n      <h4>Q: 我想和你聊一聊？</h4>\n      <p>A: 加我微信吧！</p>\n      <img\n        src={WechatQR}\n        alt=\"wechat\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n      <h4>Q: 还有别的问题想讨论？</h4>\n      <p>\n        A: 微信群和\n        <a\n          href=\"https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=636011\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          一亩三分地的帖子\n        </a>\n        ，请帮我加点大米：）\n      </p>\n      <img\n        src={WechatGroupQR}\n        alt=\"wechat_group\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n    </div>\n  );\n\n  const facebookCommentPlugin = (\n    <FacebookProvider appId=\"185533902045623\">\n      <Comments href=\"https://vicdus.github.io/uscis-case-statistics/\" />\n    </FacebookProvider>\n  );\n\n  const formTypeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Form Type  <p style={{ color: 'red' }}><strong> (Note: Check 'unknown' type for card-mailed I-485/I-765 case 已发卡的I-485/I-765 会被归类为unknwon 由于发卡后无法从USCIS得知表格类型)   </strong></p>  </FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedForm}\n        onChange={(e) => setSearchParam(\"form\", e.target.value)}\n        row={true}\n      >\n        {formTypes\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n\n  const modeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\"><p style={{ color: 'red' }}><strong>Format of case number(Try both if your case number format looks different 如果case number格式看起来不对请尝试改变此选项)</strong></p> </FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={mode}\n        onChange={(e) => setSearchParam(\"mode\", e.target.value)}\n        row={true}\n      >\n        {['data_center_year_day_code_serial', 'data_center_year_code_day_serial']\n          .map((v, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={v}\n              control={<Radio />}\n              label={v}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const centerSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Center</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedCenter}\n        onChange={(e) => setSearchParam(\"center\", e.target.value)}\n        row={true}\n      >\n        {centerNames\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  return (\n    <div>\n      {introduction}\n      {formTypeSelector}\n      {centerSelector}\n      {modeSelector}\n      {updateDayPicker}\n      {barChart}\n      {updateDayPicker}\n      {QA}\n      {facebookCommentPlugin}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}