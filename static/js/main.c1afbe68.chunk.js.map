{"version":3,"sources":["donation_wechat.jpg","wechat_group_qr.jpg","wechat_qr.jpg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getColor","s","Immutable","Map","get","ColorHash","hex","App","selectedForm","URL","window","location","href","searchParams","selectedCenter","workday","Number","parseInt","useState","selectedUpdateDay","setSelectedUpdateDay","caseData","setCaseData","activeStatus","setActiveStatus","caseID","setCaseID","setSearchParam","key","value","url","set","search","toString","useEffect","a","JSON5","fetch","text","parse","entries","useMemo","List","Object","flatMap","counts","split","center","year","day","code","form","status","map","count","updateDay","selectedEntriesAllDate","filter","e","availableUpdateDays","toSet","toList","sort","countValueForAllDays","latestUpdateDay","max","selectedEntries","formTypes","centerNames","statusCount","countBy","x","existStatus","sortBy","exisitDays","dataset","groupBy","reduce","counter","v","toObject","b","toArray","datasetWithBackfill","find","caseIDInput","style","width","display","float","TextField","id","label","fullWidth","onChange","target","Button","variant","color","disabled","Boolean","match","onClick","substr","renderActiveShape","props","RADIAN","Math","PI","cx","cy","name","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","d","stroke","r","toFixed","pieChart","pieData","val","height","activeIndex","activeShape","dataKey","isAnimationActive","data","onMouseEnter","index","entry","offset","chart","strokeDasharray","type","domain","itemSorter","nullthrows","ind","barChart","layout","min","tick","interval","allowDecimals","ticks","indexOf","stackId","introduction","Date","toDateString","rel","updateDayPicker","Grid","item","xs","Slider","marginLeft","marginRight","defaultValue","_","f","aria-labelledby","valueLabelDisplay","step","marks","getMonth","getDate","QA","alt","src","WeChatDonation","WechatQR","WechatGroupQR","facebookCommentPlugin","appId","formTypeSelector","FormControl","component","FormLabel","RadioGroup","aria-label","row","FormControlLabel","control","Radio","centerSelector","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c1afbe68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donation_wechat.84e04efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_group_qr.438b3977.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_qr.6a2dd925.jpg\";","import ColorHash from \"color-hash\";\nimport Immutable from \"immutable\";\nimport JSON5 from \"json5\";\nimport nullthrows from \"nullthrows\";\nimport React, { useEffect, useState, useMemo } from \"react\";\n// @ts-ignore\nimport { Comments, FacebookProvider } from \"react-facebook\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ContentRenderer,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  PieLabelRenderProps,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Cell,\n} from \"recharts\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport WeChatDonation from \"./donation_wechat.jpg\";\nimport WechatGroupQR from \"./wechat_group_qr.jpg\";\nimport WechatQR from \"./wechat_qr.jpg\";\nimport { TextField } from \"@material-ui/core\";\n\nconst JSON5_URL =\n  \"https://raw.githubusercontent.com/vicdus/uscis-case-statistics/master/src/data.json5\";\n\nfunction getColor(s: string): string {\n  return (\n    Immutable.Map([\n      [\"Case Was Received\", \"#999900\"],\n      [\"Case Was Approved\", \"#00FF00\"],\n      [\"Request for Additional Evidence Was Sent\", \"#FF0000\"],\n    ]).get(s) ?? new ColorHash().hex(s)\n  );\n}\n\nfunction App() {\n  const selectedForm =\n    new URL(window.location.href).searchParams.get(\"form\") ?? \"I-129\";\n  const selectedCenter =\n    new URL(window.location.href).searchParams.get(\"center\") ?? \"WAC\";\n  const workday = Number.parseInt(\n    new URL(window.location.href).searchParams.get(\"workday\") ?? \"0\"\n  );\n\n  const [selectedUpdateDay, setSelectedUpdateDay] = useState<string | null>(\n    null\n  );\n  const [caseData, setCaseData] = useState<Object>({});\n  const [activeStatus, setActiveStatus] = useState<number>(0);\n  const [caseID, setCaseID] = useState<string>(\"\");\n\n  const setSearchParam = (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    const searchParams = url.searchParams;\n    searchParams.set(key, value);\n    url.search = searchParams.toString();\n    window.location.href = url.toString();\n  };\n\n  const url = new URL(window.location.href);\n\n  useEffect(() => {\n    (async () => {\n      if (!url.searchParams.get(\"form\")) {\n        setSearchParam(\"form\", \"I-129\");\n      }\n      if (!url.searchParams.get(\"center\")) {\n        setSearchParam(\"center\", \"WAC\");\n      }\n      setCaseData(JSON5.parse(await (await fetch(JSON5_URL)).text()));\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const entries = useMemo(\n    () =>\n      Immutable.List(\n        Object.entries(caseData).flatMap(([key, counts]) => {\n          const [center, year, day, code, form, status] = key.split(\"|\");\n          return Object.entries(counts).map((count) => {\n            return {\n              center,\n              year,\n              day,\n              code,\n              form,\n              status,\n              updateDay: count[0] as string,\n              count: count[1] as number,\n            };\n          });\n        })\n      ),\n    [caseData]\n  );\n\n  const selectedEntriesAllDate = useMemo(\n    () =>\n      entries.filter(\n        (e) => e.form === selectedForm && e.center === selectedCenter\n      ),\n    [entries, selectedForm, selectedCenter]\n  );\n\n  const availableUpdateDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.updateDay))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const countValueForAllDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.count)\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const latestUpdateDay = useMemo(\n    () => selectedEntriesAllDate.map((e) => Number.parseInt(e.updateDay)).max(),\n    [selectedEntriesAllDate]\n  );\n\n  const selectedEntries = useMemo(\n    () =>\n      selectedEntriesAllDate.filter(\n        (e) =>\n          e.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()\n      ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const formTypes = useMemo(() => entries.map((e) => e.form).toSet(), [\n    entries,\n  ]);\n  const centerNames = useMemo(() => entries.map((e) => e.center).toSet(), [\n    entries,\n  ]);\n\n  const statusCount = useMemo(\n    () => selectedEntriesAllDate.countBy((x) => x.status),\n    [selectedEntriesAllDate]\n  );\n  const existStatus = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.status)\n        .toSet()\n        .toList()\n        .sortBy((s) => -(statusCount.get(s) ?? 0)),\n    [selectedEntriesAllDate, statusCount]\n  );\n\n  const exisitDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.day))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const dataset = useMemo(\n    () =>\n      selectedEntries\n        .groupBy((e) => e.day)\n        .map((e, day) => {\n          return {\n            day,\n            ...e\n              .reduce(\n                (counter, v) => counter.set(v.status, v.count),\n                Immutable.Map<string, number>()\n              )\n              .toObject(),\n          };\n        })\n        .toList()\n        .sort((a, b) => Number.parseInt(a.day) - Number.parseInt(b.day))\n        .toArray(),\n    [selectedEntries]\n  );\n\n  const datasetWithBackfill = useMemo(\n    () =>\n      exisitDays\n        .map(\n          (day) =>\n            dataset.find((v) => v.day === day.toString()) ?? {\n              day: day.toString(),\n            }\n        )\n        .toArray(),\n    [exisitDays, dataset]\n  );\n\n  const caseIDInput = (\n    <div>\n      <div style={{ width: \"600px\", display: \"inline\", float: \"left\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"也可输入你的Case ID来查询你的号段下所有status的比例, 例如 WAC2017150172\"\n          fullWidth={true}\n          onChange={(v) => setCaseID(v.target.value)}\n        />\n      </div>\n      <div style={{ width: \"100px\", display: \"inline\", float: \"left\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!Boolean(caseID.match(/^\\w{3}\\d{5}5\\d{4}$/))}\n          onClick={() => setSearchParam(\"workday\", caseID.substr(5, 3))}\n        >\n          {(() =>\n            caseID.match(/^\\w{3}\\d{5}5\\d{4}$/)\n              ? \"查询号段\" + caseID.substr(5, 3)\n              : \"Case ID invalid\")()}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderActiveShape: ContentRenderer<PieLabelRenderProps> = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      name,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value,\n    } = props;\n    const sin = Math.sin(-RADIAN * (midAngle as number));\n    const cos = Math.cos(-RADIAN * (midAngle as number));\n    const sx = (cx as number) + ((outerRadius as number) + 10) * cos;\n    const sy = (cy as number) + ((outerRadius as number) + 10) * sin;\n    const mx = (cx as number) + ((outerRadius as number) + 30) * cos;\n    const my = (cy as number) + ((outerRadius as number) + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx as number}\n          cy={cy as number}\n          innerRadius={innerRadius as number}\n          outerRadius={outerRadius as number}\n          startAngle={startAngle as number}\n          endAngle={endAngle as number}\n          fill={fill}\n        />\n        <Sector\n          cx={cx as number}\n          cy={cy as number}\n          startAngle={startAngle as number}\n          endAngle={endAngle as number}\n          innerRadius={(outerRadius as number) + 6}\n          outerRadius={(outerRadius as number) + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`${name}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`${value} cases, ${((percent as number) * 100).toFixed(2)}%`}\n        </text>\n      </g>\n    );\n  };\n\n  const pieChart = useMemo(() => {\n    if (!workday) {\n      return null;\n    }\n    const pieData = Object.entries(\n      datasetWithBackfill.find((e) => e.day === workday.toString()) ?? {}\n    )\n      .map(([key, val]) => ({ name: key, value: Number.parseInt(val) }))\n      .filter((v) => v.name !== \"day\")\n      .sort((v) => v.value);\n\n    return (\n      <div style={{ display: \"block\" }}>\n        <PieChart width={800} height={800}>\n          <Pie\n            activeIndex={activeStatus}\n            activeShape={renderActiveShape}\n            dataKey=\"value\"\n            isAnimationActive={false}\n            data={pieData}\n            cx={400}\n            cy={400}\n            outerRadius={200}\n            innerRadius={165}\n            onMouseEnter={(data, index) => setActiveStatus(index)}\n            fill=\"#8884d8\"\n          >\n            {pieData.map((entry, index) => (\n              <Cell key={index} fill={getColor(entry.name)} />\n            ))}\n          </Pie>\n          <Tooltip offset={100} />\n        </PieChart>\n        <h2>以上饼图：号段{selectedCenter + \"20\" + workday + \"5XXXX\"}</h2>\n      </div>\n    );\n  }, [activeStatus, datasetWithBackfill, workday, selectedCenter]);\n\n  const chart = useMemo(\n    () => (\n      <LineChart width={1440} height={810} data={datasetWithBackfill}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"day\" />\n        <YAxis\n          type=\"number\"\n          height={810}\n          domain={[0, countValueForAllDays.max() ?? 1]}\n        />\n        <Tooltip\n          offset={100}\n          itemSorter={(a) => -a.payload[nullthrows(a.dataKey?.toString())]}\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Line\n            key={ind}\n            type=\"linear\"\n            isAnimationActive={false}\n            dataKey={s}\n            stroke={getColor(s)}\n          />\n        ))}\n      </LineChart>\n    ),\n    [datasetWithBackfill, existStatus, countValueForAllDays]\n  );\n  const barChart = useMemo(\n    () => (\n      <BarChart\n        height={1440}\n        width={810}\n        data={datasetWithBackfill}\n        layout=\"vertical\"\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          type=\"number\"\n          dataKey=\"day\"\n          domain={[0, countValueForAllDays.max() ?? 1]}\n        />\n        <YAxis\n          type=\"category\"\n          dataKey=\"day\"\n          domain={[(exisitDays.min() ?? 0) - 1, (exisitDays.max() ?? 1) + 1]}\n          tick={true}\n          interval={0}\n          allowDecimals={true}\n          ticks={exisitDays.toArray()}\n        />\n        <Tooltip\n          offset={100}\n          itemSorter={(a) =>\n            -existStatus.indexOf(nullthrows(a.dataKey) as string)\n          }\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Bar\n            key={ind}\n            isAnimationActive={false}\n            dataKey={s}\n            stackId=\"a\"\n            fill={getColor(s)}\n          />\n        ))}\n      </BarChart>\n    ),\n    [datasetWithBackfill, countValueForAllDays, exisitDays, existStatus]\n  );\n  const introduction = (\n    <div>\n      <h1>USCIS case progress tracker</h1>\n      <p>\n        Current Form: <strong>{selectedForm}</strong>,<br /> location:{\" \"}\n        <strong>{selectedCenter}</strong> ,<br /> Last Update for this form and\n        location:\n        <strong>\n          {latestUpdateDay\n            ? new Date(\n                86400000 * latestUpdateDay + 3600 * 1000 * 7\n              ).toDateString()\n            : \"Not Exist currently\"}\n        </strong>\n      </p>\n      <h3>Help needed for UI and clawer</h3>\n      <p>\n        GitHub project:\n        <a\n          href=\"https://github.com/vicdus/uscis-case-statistics/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://github.com/vicdus/uscis-case-statistics/\n        </a>\n      </p>\n    </div>\n  );\n\n  const updateDayPicker = availableUpdateDays.max() ? (\n    <Grid item xs={8}>\n      <Slider\n        style={{ marginLeft: \"128px\", marginRight: \"128px\" }}\n        defaultValue={availableUpdateDays.max() ?? 1}\n        onChange={(_, f) => setSelectedUpdateDay(f.toString())}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={null}\n        marks={availableUpdateDays\n          .map((e) => ({\n            value: e,\n            label:\n              1 +\n              new Date(86400000 * e + 3600 * 1000 * 7).getMonth() +\n              \"/\" +\n              new Date(86400000 * e + 3600 * 1000 * 7).getDate(),\n          }))\n          .toArray()}\n        min={availableUpdateDays.min() ?? 0}\n        max={availableUpdateDays.max() ?? 1}\n      />\n    </Grid>\n  ) : null;\n\n  const QA = (\n    <div>\n      <h3>Q and A</h3>\n      <h4>Q: 怎么用？</h4>\n      <p>A: 横坐标是号段，纵坐标是状态对应的数量。</p>\n      <h4>Q: 什么是号段？</h4>\n      <p>A: 这张图里的working day number</p>\n      <img\n        alt=\"day-explain\"\n        src=\"https://www.am22tech.com/wp-content/uploads/2018/12/uscis-receipt-number-status-i797-notice-truvisa.jpg\"\n      />\n      <h4>Q: 你是谁？</h4>\n      <p>A: 我今年抽中了h1b, 在等approve</p>\n      <h4>Q: 数据来源？</h4>\n      <p>A: 枚举号段下所有可能的case number并爬取USCIS, 保存成文件</p>\n      <h4>Q: 没有我的号段的数据？</h4>\n      <p>A: 可能需要地里大家一起来爬并更新，稍后放出步骤</p>\n      <h4>Q: 为什么是文件？为什么不用数据库？</h4>\n      <p>A: 贫穷</p>\n      <h4>Q: 这个很有用，可以请你喝杯咖啡吗？</h4>\n      <p>A: 感谢！</p>\n      <img\n        src={WeChatDonation}\n        alt=\"wechat_donation\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n\n      <h4>Q: 我想和你聊一聊？</h4>\n      <p>A: 加我微信吧！</p>\n      <img\n        src={WechatQR}\n        alt=\"wechat\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n      <h4>Q: 还有别的问题想讨论？</h4>\n      <p>\n        A: 微信群和\n        <a\n          href=\"https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=636011\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          一亩三分地的帖子\n        </a>\n        ，请帮我加点大米：）\n      </p>\n      <img\n        src={WechatGroupQR}\n        alt=\"wechat_group\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n    </div>\n  );\n\n  const facebookCommentPlugin = (\n    <FacebookProvider appId=\"185533902045623\">\n      <Comments href=\"https://vicdus.github.io/uscis-case-statistics/\" />\n    </FacebookProvider>\n  );\n\n  const formTypeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Form Type</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedForm}\n        onChange={(e) => setSearchParam(\"form\", e.target.value)}\n        row={true}\n      >\n        {formTypes\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const centerSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Center</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedCenter}\n        onChange={(e) => setSearchParam(\"center\", e.target.value)}\n        row={true}\n      >\n        {centerNames\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  return (\n    <div>\n      {introduction}\n      {formTypeSelector}\n      {centerSelector}\n      {caseIDInput}\n      {pieChart}\n      {updateDayPicker}\n      {barChart}\n      {chart}\n      {updateDayPicker}\n      {QA}\n      {facebookCommentPlugin}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}