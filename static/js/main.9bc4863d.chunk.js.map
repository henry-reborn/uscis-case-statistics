{"version":3,"sources":["donation_wechat.jpg","wechat_group_qr.jpg","wechat_qr.jpg","case_number_format.png","monetization.jpg","venmo.png","scraper lazy /^/.//data_center_year_code_day_serial_.*/.json$/ groupOptions: {} namespace object","scraper lazy /^/.//data_center_year_day_code_serial_.*/.json$/ groupOptions: {} namespace object","App.tsx","Comments.tsx","index.tsx"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","statusMap","Map","getColor","s","Immutable","get","ColorHash","hex","App","selectedForm","URL","window","location","href","searchParams","selectedCenter","mode","selectedFy","useState","filter","setFilter","selectedUpdateDay","setSelectedUpdateDay","caseData","setCaseData","transitioningData","setTransitioningData","setSearchParam","key","value","url","set","search","toString","filterByDay","obj","day","padStart","startsWith","useEffect","a","includes","default","entries","useMemo","List","flatMap","counts","split","center","year","form","status","count","updateDay","groupBy","v","toList","toArray","lodash","sumBy","selectedEntriesAllDate","availableUpdateDays","Number","parseInt","toSet","sort","latestUpdateDay","max","selectedEntries","formTypes","length","centerNames","statusCount","countBy","x","existStatus","sortBy","exisitDays","dataset","reduce","counter","toObject","b","previousDayCount","todayCount","datasetWithBackfill","find","totalCountToday","cnt","k","processedTransitioningData","format","from","to","trans","toMap","valueSeq","Transitioning","i","style","color","display","sumToday","sum","Array","values","TotalCountToday","toFixed","maxBarHeight","barChart","currentExistsDays","height","width","data","layout","strokeDasharray","type","dataKey","domain","tickFormatter","min","tick","fontSize","interval","allowDecimals","ticks","offset","content","payload","label","todayTotal","prevdayTotal","backgroundColor","p","ind","prevDay","fill","marginBottom","itemSorter","indexOf","nullthrows","isAnimationActive","stackId","maxTransitionCount","existTransition","Set","transitioningDataForBarChart","forEach","add","Math","fromEntries","existDay","findIndex","push","barChartForTransition","allowDataOverflow","trim","introduction","Date","toDateString","target","rel","updateDayPicker","Grid","item","xs","Slider","marginLeft","marginRight","defaultValue","onChange","_","f","aria-labelledby","valueLabelDisplay","step","marks","getMonth","getDate","formTypeSelector","FormControl","fullWidth","component","FormLabel","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","modeSelector","centerSelector","fySelector","filterEntries","event","FilterBox","Box","TextField","Comments","QA","src","Venmo","alt","Monetization","CaseNumberFormat","WeChatDonation","WechatQR","WechatGroupQR","facebookCommentPlugin","appId","orderBy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bc4863d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donation_wechat.84e04efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_group_qr.b70b83ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_qr.6a2dd925.jpg\";","module.exports = __webpack_public_path__ + \"static/media/case_number_format.e778d75a.png\";","module.exports = __webpack_public_path__ + \"static/media/monetization.b7e75b32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/venmo.76bf9850.png\";","var map = {\n\t\"./data_center_year_code_day_serial_21.json\": [\n\t\t476,\n\t\t3\n\t],\n\t\"./data_center_year_code_day_serial_22.json\": [\n\t\t477,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 438;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./data_center_year_day_code_serial_21.json\": [\n\t\t478,\n\t\t5\n\t],\n\t\"./data_center_year_day_code_serial_22.json\": [\n\t\t479,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 439;\nmodule.exports = webpackAsyncContext;","import ColorHash from \"color-hash\";\nimport Immutable from \"immutable\";\nimport nullthrows from \"nullthrows\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport lodash from \"lodash\";\n\nimport { Bar, BarChart, CartesianGrid, ContentRenderer, Tooltip, XAxis, YAxis, TooltipProps } from \"recharts\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Box, TextField } from \"@material-ui/core\";\n\ntype FY = \"20\" | \"21\";\nconst statusMap = new Map([\n  [\"Case Was Approved And My Decision Was Emailed\", \"Case Was Approved\"],\n  [\"Case Was Received and A Receipt Notice Was Emailed\", \"Case Was Received\"],\n  [\"Case Was Received and A Receipt Notice Was Sent\", \"Case Was Received\"],\n  [\"Request for Initial Evidence Was Sent\", \"Request for Additional Evidence Was Sent\"],\n  [\"Case Was Transferred And A New Office Has Jurisdiction\", \"Case Transferred And New Office Has Jurisdiction\"],\n]);\n\nfunction getColor(s: string): string {\n  return (\n    Immutable.Map([\n      [\"Case Was Received\", \"#999900\"],\n      [\"Case Was Approved\", \"#00FF00\"],\n      [\"Request for Additional Evidence Was Sent\", \"#FF0000\"],\n    ]).get(s) ?? new ColorHash().hex(s)\n  );\n}\n\nconst App: React.FC<{}> = () => {\n  const selectedForm = new URL(window.location.href).searchParams.get(\"form\") ?? \"I-129\";\n  const selectedCenter = new URL(window.location.href).searchParams.get(\"center\") ?? \"WAC\";\n  const mode = new URL(window.location.href).searchParams.get(\"mode\") ?? \"data_center_year_code_day_serial\";\n  const selectedFy = new URL(window.location.href).searchParams.get(\"fy\");\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [selectedUpdateDay, setSelectedUpdateDay] = useState<string | null>(null);\n  const [caseData, setCaseData] = useState<{ [key: string]: { [day: string]: number; }; }>({});\n  const [transitioningData, setTransitioningData] = useState<{ [day: string]: { [index: string]: number; }; }>({});\n\n  const setSearchParam = (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    const searchParams = url.searchParams;\n    searchParams.set(key, value);\n    url.search = searchParams.toString();\n    window.location.href = url.toString();\n  };\n\n  const url = new URL(window.location.href);\n\n  const filterByDay = (obj: any) => {\n    if (!obj) return true;\n    const format =\n      mode === \"data_center_year_code_day_serial\"\n        ? selectedCenter + selectedFy + \"9\" + obj.day.toString().padStart(3, \"0\") + \"XXXX\"\n        : selectedCenter + selectedFy + obj.day.toString().padStart(3, \"0\") + \"5XXXX\";\n    return format.startsWith(filter);\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!url.searchParams.get(\"fy\")) {\n        setSearchParam(\"fy\", \"21\");\n      }\n      if (!url.searchParams.get(\"form\")) {\n        setSearchParam(\"form\", \"I-129\");\n      }\n      if (!url.searchParams.get(\"center\")) {\n        setSearchParam(\"center\", \"WAC\");\n      }\n      if (!url.searchParams.get(\"mode\") && url.searchParams.get(\"form\")) {\n        setSearchParam(\"mode\", [\"I-485\", \"I-140\"].includes(url.searchParams.get(\"form\")!) ? \"data_center_year_code_day_serial\" : \"data_center_year_day_code_serial\");\n      }\n      if (url.searchParams.get(\"form\") && url.searchParams.get(\"center\") && url.searchParams.get(\"mode\")) {\n        if (url.searchParams.get(\"t_delta\") === \"7\") {\n          setTransitioningData((await import(\"./scraper/transitioning_7.json\")).default);\n        } else {\n          setTransitioningData((await import(\"./scraper/transitioning_1.json\")).default);\n        }\n        if (mode === \"data_center_year_code_day_serial\") {\n          setCaseData((await import(\"./scraper/data_center_year_code_day_serial_\" + selectedFy + \".json\")).default);\n        } else {\n          setCaseData((await import(\"./scraper/data_center_year_day_code_serial_\" + selectedFy + \".json\")).default);\n        }\n      }\n    })();\n  }, [mode, selectedFy, url.searchParams]);\n\n  const entries = useMemo(() => {\n    return Immutable.List(\n      Object.entries(caseData).flatMap(([key, counts]) => {\n        const [center, year, day, code, form, status] = key.split(\"|\");\n        return Object.entries(counts).map((count) => {\n          return {\n            center,\n            year,\n            day,\n            code,\n            form,\n            status,\n            updateDay: count[0] as string,\n            count: count[1] as number,\n          };\n        });\n      })\n    )\n      .groupBy((v) => v.center + v.year + v.day + v.code + v.form + (statusMap.get(v.status) ?? v.status) + v.updateDay)\n      .map((v) => v.toList().toArray())\n      .map((v) => {\n        return {\n          center: v[0].center,\n          year: v[0].year,\n          day: v[0].day,\n          code: v[0].code,\n          form: v[0].form,\n          status: statusMap.get(v[0].status) ?? v[0].status,\n          updateDay: v[0].updateDay,\n          count: lodash.sumBy(v, (v) => v.count) as number,\n        };\n      })\n      .toList();\n  }, [caseData]);\n\n  const selectedEntriesAllDate = useMemo(() => entries.filter((e) => e.form === selectedForm && e.center === selectedCenter), [entries, selectedForm, selectedCenter]);\n\n  const availableUpdateDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.updateDay))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const latestUpdateDay = useMemo(() => selectedEntriesAllDate.map((e) => Number.parseInt(e.updateDay)).max(), [selectedEntriesAllDate]);\n\n  const selectedEntries = useMemo(\n    () => selectedEntriesAllDate.filter((e) => e.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const formTypes = useMemo(\n    () =>\n      entries\n        .map((e) => e.form)\n        .toSet()\n        .filter((e) => e && e.length > 0),\n    [entries]\n  );\n  const centerNames = useMemo(\n    () =>\n      entries\n        .map((e) => e.center)\n        .toSet()\n        .filter((e) => e && e.length > 0 && e !== \"default\"),\n    [entries]\n  );\n\n  const statusCount = useMemo(() => selectedEntriesAllDate.countBy((x) => x.status), [selectedEntriesAllDate]);\n  const existStatus = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.status)\n        .toSet()\n        .toList()\n        .sortBy((s) => -(statusCount.get(s) ?? 0)),\n    [selectedEntriesAllDate, statusCount]\n  );\n\n  const exisitDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.day))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const dataset = useMemo(\n    () =>\n      selectedEntries\n        .groupBy((e) => e.day)\n        .map((e, day) => {\n          return {\n            day,\n            ...e.reduce((counter, v) => counter.set(v.status, v.count), Immutable.Map<string, number>()).toObject(),\n          };\n        })\n        .toList()\n        .sort((a, b) => Number.parseInt(a.day) - Number.parseInt(b.day))\n        .toArray(),\n    [selectedEntries]\n  );\n\n  const previousDayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter((v) => v.updateDay === (Number.parseInt((selectedUpdateDay ?? latestUpdateDay)?.toString() ?? \"0\") - 1).toString())\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const todayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter((v) => v.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString())\n        .filter(filterByDay)\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay, filter]\n  );\n\n  const datasetWithBackfill = useMemo(\n    () =>\n      exisitDays\n        .map(\n          (day) =>\n            dataset.find((v) => v.day === day.toString()) ?? {\n              day: day.toString(),\n            }\n        )\n        .toArray(),\n    [exisitDays, dataset]\n  );\n\n  const totalCountToday: Map<String, number> = new Map();\n  for (const cnt of datasetWithBackfill) {\n    for (const [k, v] of Object.entries(cnt)) {\n      if (k === \"day\") continue;\n      totalCountToday.set(k, Number.parseInt(v) + (totalCountToday.get(k) ?? 0));\n    }\n  }\n\n  const all = false;\n  const processedTransitioningData = Immutable.List(\n    all\n      ? Object.values(transitioningData)\n        .map((v) => Object.entries(v))\n        .flat()\n      : Object.entries(transitioningData[selectedUpdateDay ?? latestUpdateDay ?? \"\"] ?? {})\n  )\n    .map(([key, count]) => {\n      const [format, form, center, year, code, day, from, to] = key.split(\"|\");\n      return { format, form, center, year, code, day, from, to, count };\n    })\n    .filter((trans) => trans.year === selectedFy && trans.center === selectedCenter && trans.form === selectedForm && \"data_\" + trans.format === url.searchParams.get(\"mode\"))\n    .groupBy((trans) => trans.from + trans.to)\n    .toMap()\n    .map((v) => v.valueSeq().toList())\n    .valueSeq()\n    .toList()\n    .map((trans) => {\n      return {\n        from: trans.get(0)!.from,\n        to: trans.get(0)!.to,\n        count: lodash.sumBy(trans.toArray(), (t) => t.count),\n      };\n    })\n    .toArray();\n\n  const Transitioning = (\n    <div>\n      {processedTransitioningData\n        .sort((a, b) => b.count - a.count)\n        .map((trans, i) => {\n          return (\n            <div key={i}>\n              <div style={{ color: getColor(trans.from), display: \"inline\" }}>{trans.from}</div>\n              <b>{\" => \"}</b>\n              <div style={{ color: getColor(trans.to), display: \"inline\" }}>{trans.to}</div>\n              <b>{\" : \" + trans.count}</b>\n            </div>\n          );\n        })}\n    </div>\n  );\n\n  const sumToday = lodash.sum(Array.from(totalCountToday.values()));\n  const TotalCountToday = (\n    <div>\n      <h3>\n        Total for {selectedCenter} and {selectedForm} on your selected date\n      </h3>\n      <h4>Transitioning</h4>\n      {Transitioning}\n      <br />\n      <h4>Total Counts:</h4>\n      {Array.from(totalCountToday)\n        .sort((a, b) => b[1] - a[1])\n        .map(([k, v], i) => (\n          <div key={i} style={{ color: getColor(k as string) }}>\n            {k} : {v}, {((v * 100) / sumToday).toFixed(2)}%\n          </div>\n        ))}\n      <div>\n        <b>Total: {sumToday}</b>\n      </div>\n    </div>\n  );\n\n  const maxBarHeight = useMemo(\n    () =>\n      todayCount\n        .valueSeq()\n        .map((v) => lodash.sum(v.valueSeq().toArray()))\n        .max(),\n    [todayCount]\n  );\n\n  const barChart = useMemo(() => {\n    const CustomTooltip: ContentRenderer<TooltipProps> = ({ payload, label }) => {\n      const todayTotal = todayCount.get(label as string)?.reduce((a, b) => a + (b as number), 0) ?? 1;\n      const prevdayTotal = previousDayCount.get(label as string)?.reduce((a, b) => a + (b as number), 0) ?? 1;\n\n      return (\n        <div style={{ backgroundColor: \"#F0F8FF\" }}>\n          <p>{`${label}`}</p>\n          {(payload ?? []).map((p, ind) => {\n            const prevDay = (previousDayCount.get(label as string)?.get(p.dataKey as string) ?? 0) as number;\n            return (\n              <p key={ind} style={{ color: p.fill, marginBottom: \"3px\" }}>{`${p.dataKey}: ${p.value} of ${todayTotal} (${((100 * (p.value as number)) / todayTotal).toFixed(\n                2\n              )}%), Previous day: ${prevDay} of ${prevdayTotal},  (${((100 * prevDay) / prevdayTotal).toFixed(2)}%)`}</p>\n            );\n          })}\n        </div>\n      );\n    };\n\n    const currentExistsDays = exisitDays.filter((day) => filterByDay({ day }));\n    return (\n      <BarChart height={1440} width={810} data={datasetWithBackfill.filter((data) => filterByDay(data))} layout=\"vertical\">\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"day\" domain={[0, maxBarHeight ?? 1]} />\n        <YAxis\n          type=\"category\"\n          dataKey=\"day\"\n          width={150}\n          tickFormatter={(day) =>\n            mode === \"data_center_year_code_day_serial\"\n              ? selectedCenter + selectedFy + \"9\" + day.toString().padStart(3, \"0\") + \"XXXX\"\n              : selectedCenter + selectedFy + day.toString().padStart(3, \"0\") + \"5XXXX\"\n          }\n          domain={[(currentExistsDays.min() ?? 0) - 1, (currentExistsDays.max() ?? 1) + 1]}\n          tick={{ fontSize: \"6\" }}\n          interval={0}\n          allowDecimals={true}\n          ticks={currentExistsDays.toArray()}\n        />\n        <Tooltip offset={100} content={CustomTooltip} itemSorter={(a) => -existStatus.indexOf(nullthrows(a.dataKey) as string)} />\n        {existStatus.toArray().map((s, ind) => (\n          <Bar key={ind} isAnimationActive={false} dataKey={s} stackId=\"a\" fill={getColor(s)} />\n        ))}\n      </BarChart>\n    );\n  }, [datasetWithBackfill, maxBarHeight, exisitDays, existStatus, todayCount, previousDayCount, mode, selectedCenter, selectedFy, filter]);\n\n\n  let maxTransitionCount = 1;\n  const existTransition: Set<string> = new Set();\n  const transitioningDataForBarChart = Immutable.List(Object.entries(transitioningData[selectedUpdateDay ?? latestUpdateDay ?? \"\"] ?? {})\n    .map(([key, count]) => {\n      const [mode, form, center, year, code, day, from, to] = key.split(\"|\");\n      return { mode, form, center, year, code, day, from, to, count };\n    })\n    .filter(v => v.center === selectedCenter && v.form === selectedForm && \"data_\" + v.mode === mode && v.year === selectedFy)\n    .map(v => ({ day: v.day, from: v.from, to: v.to, count: v.count })))\n    .groupBy(v => v.day)\n    .map(v => v.toList().toArray())\n    .toList()\n    .map(v => {\n      const day = v[0].day;\n      const map: Map<string, number> = new Map();\n      map.set(\"day\", Number.parseInt(day));\n      v.forEach(e => {\n        existTransition.add(e.from + \" => \" + e.to);\n        map.set(e.from + \" => \" + e.to, e.count);\n      });\n      maxTransitionCount = Math.max(lodash.sumBy(v, e => e.count), maxTransitionCount)\n      return Object.fromEntries(map);\n    })\n    .toArray();\n\n  exisitDays.forEach(existDay => {\n    if (transitioningDataForBarChart.findIndex(data => data.day === existDay) === -1) {\n      transitioningDataForBarChart.push({ day: existDay });\n    }\n  });\n  transitioningDataForBarChart.sort((a, b) => a.day - b.day);\n\n\n  const barChartForTransition = <BarChart height={1440} width={810} data={transitioningDataForBarChart} layout=\"vertical\">\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis type=\"number\" dataKey=\"day\" domain={[0, maxTransitionCount]} allowDataOverflow={true} />\n    <YAxis\n      type=\"category\"\n      dataKey=\"day\"\n      width={150}\n      tickFormatter={(day) =>\n        mode === \"data_center_year_code_day_serial\"\n          ? selectedCenter + selectedFy + \"9\" + day.toString().padStart(3, \"0\") + \"XXXX\"\n          : selectedCenter + selectedFy + day.toString().padStart(3, \"0\") + \"5XXXX\"\n      }\n      tick={{ fontSize: \"6\" }}\n      interval={0}\n      allowDecimals={true}\n      ticks={exisitDays.toArray()}\n    />\n    <Tooltip offset={100} />\n    {Array.from(existTransition.keys()).map((s, ind) => (\n      <Bar key={ind} isAnimationActive={false} dataKey={s} stackId=\"b\" fill={getColor(s.split(\"=>\")[1].trim())} />\n    ))}\n  </BarChart>;\n\n\n  const introduction = (\n    <div>\n      <h1>USCIS case progress tracker</h1>\n      <p>\n        Current Form: <strong>{selectedForm}</strong>,<br /> location: <strong>{selectedCenter}</strong>,\n        <br />\n        Case number mode: <strong>{mode}</strong>\n        <br /> Last Update for this form and location:\n        <strong>{latestUpdateDay ? new Date(86400000 * latestUpdateDay + 3600 * 1000 * 7).toDateString() : \"Not Exist currently\"}</strong>\n      </p>\n      <h3>Help needed for UI and crawler</h3>\n      <p>\n        GitHub project:\n        <a href=\"https://github.com/vicdus/uscis-case-statistics/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          https://github.com/vicdus/uscis-case-statistics/\n        </a>\n      </p>\n    </div>\n  );\n\n  const updateDayPicker = availableUpdateDays.max() ? (\n    <Grid item xs={8}>\n      <Slider\n        style={{ marginLeft: \"128px\", marginRight: \"128px\" }}\n        defaultValue={availableUpdateDays.max() ?? 1}\n        onChange={(_, f) => setSelectedUpdateDay(f.toString())}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={null}\n        marks={availableUpdateDays\n          .map((e) => ({\n            value: e,\n            label: 1 + new Date(86400000 * e + 3600 * 1000 * 7).getMonth() + \"/\" + new Date(86400000 * e + 3600 * 1000 * 7).getDate(),\n          }))\n          .toArray()}\n        min={availableUpdateDays.min() ?? 0}\n        max={availableUpdateDays.max() ?? 1}\n      />\n    </Grid>\n  ) : null;\n\n  const formTypeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">\n        Form Type{\" \"}\n        <p style={{ color: \"red\" }}>\n          <strong> (Note: Check 'unknown' type for card-mailed I-485/I-765 case 已发卡的I-485/I-765 会被归类为unknwon 由于发卡后无法从USCIS得知表格类型) </strong>\n        </p>{\" \"}\n      </FormLabel>\n      <RadioGroup aria-label=\"form\" name=\"form\" value={selectedForm} onChange={(e) => setSearchParam(\"form\", e.target.value)} row={true}>\n        {formTypes\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel key={ind} value={f} control={<Radio />} label={f} />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const modeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">\n        <p style={{ color: \"red\" }}>\n          <strong>Format of case number(Try both if your case number format looks different 如果case number格式看起来不对请尝试改变此选项)</strong>\n        </p>{\" \"}\n      </FormLabel>\n      <RadioGroup aria-label=\"form\" name=\"form\" value={mode} onChange={(e) => setSearchParam(\"mode\", e.target.value)} row={true}>\n        {[\"data_center_year_day_code_serial\", \"data_center_year_code_day_serial\"].map((v, ind) => (\n          <FormControlLabel key={ind} value={v} control={<Radio />} label={v} />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const centerSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Center</FormLabel>\n      <RadioGroup aria-label=\"form\" name=\"form\" value={selectedCenter} onChange={(e) => setSearchParam(\"center\", e.target.value)} row={true}>\n        {centerNames\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel key={ind} value={f} control={<Radio />} label={f} />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const fySelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Fiscal Year</FormLabel>\n      <RadioGroup aria-label=\"fy\" name=\"fy\" value={selectedFy} onChange={(e) => setSearchParam(\"fy\", e.target.value)} row={true}>\n        {[\"21\", \"22\"].map((f, ind) => (\n          <FormControlLabel key={ind} value={f} control={<Radio />} label={f} />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const filterEntries = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const FilterBox = () => {\n    return (\n      <Box component=\"form\">\n        <TextField id=\"outlined-name\" label=\"Filter\" value={filter} onChange={filterEntries}></TextField>\n      </Box>\n    );\n  };\n\n  return (\n    <div>\n      {introduction}\n      {fySelector}\n      {formTypeSelector}\n      {centerSelector}\n      {modeSelector}\n      <FilterBox></FilterBox>\n      {updateDayPicker}\n      <h2>Current State</h2>\n      {barChart}\n      <h2>State Transition in previous day</h2>\n      {barChartForTransition}\n      {updateDayPicker}\n      {TotalCountToday}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\n// @ts-ignore\nimport { Comments as FBComments, FacebookProvider } from \"react-facebook\";\nimport WeChatDonation from \"./donation_wechat.jpg\";\nimport WechatGroupQR from \"./wechat_group_qr.jpg\";\nimport WechatQR from \"./wechat_qr.jpg\";\nimport CaseNumberFormat from \"./case_number_format.png\";\nimport Monetization from './monetization.jpg';\nimport Venmo from './venmo.png';\n\nconst Comments: React.FC<{}> = () => {\n    const QA = (\n        <div>\n            <h2>捐赠是维持这个项目运营的唯一收入来源🙏</h2>\n            <img\n                src={Venmo}\n                alt=\"venmo\"\n                style={{ width: \"350px\", height: \"350px\" }}\n            />\n            <img\n                src={Monetization}\n                alt=\"none\"\n                style={{ width: \"486px\", height: \"303px\" }}\n            />\n            <h3>Q and A</h3>\n            <h4>Q: 怎么用？</h4>\n            <p>A: 横坐标是号段，纵坐标是状态对应的数量。</p>\n            <h4>Q: 什么是号段？</h4>\n            <p>A: 这张图里的working day number</p>\n            <img\n                src={CaseNumberFormat}\n                alt=\"wechat_donation\"\n                style={{ width: \"472px\", height: \"200px\" }}\n            />\n            <h4>Q: 你是谁？</h4>\n            <p>A: 我今年抽中了h1b, 在等approve</p>\n            <h4>Q: 数据来源？</h4>\n            <p>A: 枚举号段下所有可能的case number并爬取USCIS, 保存成文件</p>\n            <h4>Q: 一般什么时候更新数据？</h4>\n            <p>\n                A:\n                通常美西第二天凌晨更新前一个工作日的数据，取决于uscis是否抽风以及我晚上是否喝大了忘记跑更新脚本（手动狗头\n            </p>\n            <h4>Q: 为什么是文件？为什么不用数据库？</h4>\n            <p>A: 贫穷, github deploy静态网页不要钱</p>\n            <h4>Q: 这个很有用，可以请你喝杯咖啡吗？</h4>\n            <p>A: 感谢！</p>\n            <img\n                src={WeChatDonation}\n                alt=\"wechat_donation\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n\n            <h4>Q: 我想和你聊一聊？</h4>\n            <p>A: 加我微信吧！</p>\n            <img\n                src={WechatQR}\n                alt=\"wechat\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n            <h4>Q: 还有别的问题想讨论？</h4>\n            <p>\n                A: 微信群和\n                <a\n                    href=\"https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=636011\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    一亩三分地的帖子\n                </a>\n                ，请帮我加点大米：）\n            </p>\n            <img\n                src={WechatGroupQR}\n                alt=\"wechat_group\"\n                style={{ width: \"400px\", height: \"560px\" }}\n            />\n        </div>\n    );\n\n    const facebookCommentPlugin = (\n        <FacebookProvider appId=\"185533902045623\">\n            <FBComments orderBy=\"reverse_time\" href=\"https://vicdus.github.io/uscis-case-statistics/\" />\n        </FacebookProvider>\n    );\n\n    return (\n        <div>\n            {QA}\n            {facebookCommentPlugin}\n        </div>\n    );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Comments from \"./Comments\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Comments />\n  </React.StrictMode>,\n  document.getElementById(\"comments\")\n);\n"],"sourceRoot":""}