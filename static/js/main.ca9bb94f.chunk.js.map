{"version":3,"sources":["donation_wechat.jpg","wechat_group_qr.jpg","wechat_qr.jpg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","statusMap","Map","getColor","s","Immutable","get","ColorHash","hex","App","selectedForm","URL","window","location","href","searchParams","selectedCenter","workday","Number","parseInt","useState","selectedUpdateDay","setSelectedUpdateDay","caseData","setCaseData","activeStatus","setActiveStatus","caseID","setCaseID","setSearchParam","key","value","url","set","search","toString","useEffect","a","JSON5","fetch","text","parse","entries","useMemo","List","Object","flatMap","counts","split","center","year","day","code","form","status","map","count","updateDay","groupBy","v","toList","toArray","lodash","selectedEntriesAllDate","filter","e","availableUpdateDays","toSet","sort","countValueForAllDays","latestUpdateDay","max","selectedEntries","formTypes","centerNames","statusCount","countBy","x","existStatus","sortBy","exisitDays","dataset","reduce","counter","toObject","b","previousDayCount","size","todayCount","datasetWithBackfill","find","caseIDInput","style","width","display","float","TextField","id","label","fullWidth","onChange","target","Button","variant","color","disabled","Boolean","match","onClick","substr","renderActiveShape","props","RADIAN","Math","PI","cx","cy","name","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","d","stroke","r","toFixed","pieChart","pieData","val","height","activeIndex","activeShape","dataKey","isAnimationActive","data","onMouseEnter","index","entry","offset","chart","strokeDasharray","type","domain","itemSorter","nullthrows","ind","barChart","layout","min","tick","interval","allowDecimals","ticks","content","todayTotal","prevdayTotal","backgroundColor","p","prevDay","marginBottom","indexOf","stackId","introduction","Date","toDateString","rel","updateDayPicker","Grid","item","xs","Slider","marginLeft","marginRight","defaultValue","_","f","aria-labelledby","valueLabelDisplay","step","marks","getMonth","getDate","QA","alt","src","WeChatDonation","WechatQR","WechatGroupQR","facebookCommentPlugin","appId","formTypeSelector","FormControl","component","FormLabel","RadioGroup","aria-label","row","FormControlLabel","control","Radio","centerSelector","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca9bb94f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donation_wechat.84e04efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_group_qr.54e02a3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wechat_qr.6a2dd925.jpg\";","import ColorHash from \"color-hash\";\nimport Immutable from \"immutable\";\nimport JSON5 from \"json5\";\nimport nullthrows from \"nullthrows\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport * as lodash from \"lodash\";\n\n// @ts-ignore\nimport { Comments, FacebookProvider } from \"react-facebook\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ContentRenderer,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  PieLabelRenderProps,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Cell,\n  TooltipProps,\n} from \"recharts\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport WeChatDonation from \"./donation_wechat.jpg\";\nimport WechatGroupQR from \"./wechat_group_qr.jpg\";\nimport WechatQR from \"./wechat_qr.jpg\";\nimport { TextField } from \"@material-ui/core\";\n\nconst JSON5_URL =\n  \"https://raw.githubusercontent.com/vicdus/uscis-case-statistics/master/src/data.json5\";\n\nconst statusMap = new Map([\n  [\"Case Was Approved And My Decision Was Emailed\", \"Case Was Approved\"],\n  [\"Case Was Received and A Receipt Notice Was Emailed\", \"Case Was Received\"],\n  [\n    \"Request for Initial Evidence Was Sent\",\n    \"Request for Additional Evidence Was Sent\",\n  ],\n  [\n    \"Case Was Transferred And A New Office Has Jurisdiction\",\n    \"Case Transferred And New Office Has Jurisdiction\",\n  ],\n]);\n\nfunction getColor(s: string): string {\n  return (\n    Immutable.Map([\n      [\"Case Was Received\", \"#999900\"],\n      [\"Case Was Approved\", \"#00FF00\"],\n      [\"Request for Additional Evidence Was Sent\", \"#FF0000\"],\n    ]).get(s) ?? new ColorHash().hex(s)\n  );\n}\n\nfunction App() {\n  const selectedForm =\n    new URL(window.location.href).searchParams.get(\"form\") ?? \"I-129\";\n  const selectedCenter =\n    new URL(window.location.href).searchParams.get(\"center\") ?? \"WAC\";\n  const workday = Number.parseInt(\n    new URL(window.location.href).searchParams.get(\"workday\") ?? \"0\"\n  );\n  const displayMode =\n    new URL(window.location.href).searchParams.get(\"displaymode\") ?? \"absolute\";\n\n  const [selectedUpdateDay, setSelectedUpdateDay] = useState<string | null>(\n    null\n  );\n  const [caseData, setCaseData] = useState<Object>({});\n  const [activeStatus, setActiveStatus] = useState<number>(0);\n  const [caseID, setCaseID] = useState<string>(\"\");\n\n  const setSearchParam = (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    const searchParams = url.searchParams;\n    searchParams.set(key, value);\n    url.search = searchParams.toString();\n    window.location.href = url.toString();\n  };\n\n  const url = new URL(window.location.href);\n\n  useEffect(() => {\n    (async () => {\n      if (!url.searchParams.get(\"form\")) {\n        setSearchParam(\"form\", \"I-129\");\n      }\n      if (!url.searchParams.get(\"center\")) {\n        setSearchParam(\"center\", \"WAC\");\n      }\n      setCaseData(JSON5.parse(await (await fetch(JSON5_URL)).text()));\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const entries = useMemo(() => {\n    return Immutable.List(\n      Object.entries(caseData).flatMap(([key, counts]) => {\n        const [center, year, day, code, form, status] = key.split(\"|\");\n        return Object.entries(counts).map((count) => {\n          return {\n            center,\n            year,\n            day,\n            code,\n            form,\n            status,\n            updateDay: count[0] as string,\n            count: count[1] as number,\n          };\n        });\n      })\n    )\n      .groupBy(\n        (v) =>\n          v.center +\n          v.year +\n          v.day +\n          v.code +\n          v.form +\n          (statusMap.get(v.status) ?? v.status) +\n          v.updateDay\n      )\n      .map((v) => v.toList().toArray())\n      .map((v) => {\n        return {\n          center: v[0].center,\n          year: v[0].year,\n          day: v[0].day,\n          code: v[0].code,\n          form: v[0].form,\n          status: statusMap.get(v[0].status) ?? v[0].status,\n          updateDay: v[0].updateDay,\n          count: lodash.sumBy(v, (v) => v.count) as number,\n        };\n      })\n      .toList();\n  }, [caseData]);\n\n  const selectedEntriesAllDate = useMemo(\n    () =>\n      entries.filter(\n        (e) => e.form === selectedForm && e.center === selectedCenter\n      ),\n    [entries, selectedForm, selectedCenter]\n  );\n\n  const availableUpdateDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.updateDay))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const countValueForAllDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.count)\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const latestUpdateDay = useMemo(\n    () => selectedEntriesAllDate.map((e) => Number.parseInt(e.updateDay)).max(),\n    [selectedEntriesAllDate]\n  );\n\n  const selectedEntries = useMemo(\n    () =>\n      selectedEntriesAllDate.filter(\n        (e) =>\n          e.updateDay === (selectedUpdateDay ?? latestUpdateDay)?.toString()\n      ),\n    [selectedEntriesAllDate, selectedUpdateDay, latestUpdateDay]\n  );\n\n  const formTypes = useMemo(() => entries.map((e) => e.form).toSet(), [\n    entries,\n  ]);\n  const centerNames = useMemo(() => entries.map((e) => e.center).toSet(), [\n    entries,\n  ]);\n\n  const statusCount = useMemo(\n    () => selectedEntriesAllDate.countBy((x) => x.status),\n    [selectedEntriesAllDate]\n  );\n  const existStatus = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => e.status)\n        .toSet()\n        .toList()\n        .sortBy((s) => -(statusCount.get(s) ?? 0)),\n    [selectedEntriesAllDate, statusCount]\n  );\n\n  const exisitDays = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .map((e) => Number.parseInt(e.day))\n        .toSet()\n        .toList()\n        .sort(),\n    [selectedEntriesAllDate]\n  );\n\n  const dataset = useMemo(\n    () =>\n      selectedEntries\n        .groupBy((e) => e.day)\n        .map((e, day) => {\n          return {\n            day,\n            ...e\n              .reduce(\n                (counter, v) => counter.set(v.status, v.count),\n                Immutable.Map<string, number>()\n              )\n              .toObject(),\n          };\n        })\n        .toList()\n        .sort((a, b) => Number.parseInt(a.day) - Number.parseInt(b.day))\n        .toArray(),\n    [selectedEntries]\n  );\n\n  const previousDayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay ===\n            availableUpdateDays.get(availableUpdateDays.size - 2)?.toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [availableUpdateDays, selectedEntriesAllDate]\n  );\n\n  const todayCount = useMemo(\n    () =>\n      selectedEntriesAllDate\n        .filter(\n          (v) =>\n            v.updateDay ===\n            availableUpdateDays.get(availableUpdateDays.size - 1)?.toString()\n        )\n        .groupBy((v) => v.day)\n        .map((v) =>\n          Immutable.Map(\n            // @ts-ignore\n            v.map((x) => [x.status.toString(), x.count]).toArray()\n          )\n        ),\n    [availableUpdateDays, selectedEntriesAllDate]\n  );\n\n  const datasetWithBackfill = useMemo(\n    () =>\n      exisitDays\n        .map(\n          (day) =>\n            dataset.find((v) => v.day === day.toString()) ?? {\n              day: day.toString(),\n            }\n        )\n        .toArray(),\n    [exisitDays, dataset]\n  );\n\n  const caseIDInput = (\n    <div>\n      <div style={{ width: \"600px\", display: \"inline\", float: \"left\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"也可输入你的Case ID来查询你的号段下所有status的比例, 例如 WAC2017150172\"\n          fullWidth={true}\n          onChange={(v) => setCaseID(v.target.value)}\n        />\n      </div>\n      <div style={{ width: \"100px\", display: \"inline\", float: \"left\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!Boolean(caseID.match(/^\\w{3}\\d{5}5\\d{4}$/))}\n          onClick={() => setSearchParam(\"workday\", caseID.substr(5, 3))}\n        >\n          {(() =>\n            caseID.match(/^\\w{3}\\d{5}5\\d{4}$/)\n              ? \"查询号段\" + caseID.substr(5, 3)\n              : \"Case ID invalid\")()}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderActiveShape: ContentRenderer<PieLabelRenderProps> = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      name,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value,\n    } = props;\n    const sin = Math.sin(-RADIAN * (midAngle as number));\n    const cos = Math.cos(-RADIAN * (midAngle as number));\n    const sx = (cx as number) + ((outerRadius as number) + 10) * cos;\n    const sy = (cy as number) + ((outerRadius as number) + 10) * sin;\n    const mx = (cx as number) + ((outerRadius as number) + 30) * cos;\n    const my = (cy as number) + ((outerRadius as number) + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx as number}\n          cy={cy as number}\n          innerRadius={innerRadius as number}\n          outerRadius={outerRadius as number}\n          startAngle={startAngle as number}\n          endAngle={endAngle as number}\n          fill={fill}\n        />\n        <Sector\n          cx={cx as number}\n          cy={cy as number}\n          startAngle={startAngle as number}\n          endAngle={endAngle as number}\n          innerRadius={(outerRadius as number) + 6}\n          outerRadius={(outerRadius as number) + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`${name}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`${value} cases, ${((percent as number) * 100).toFixed(2)}%`}\n        </text>\n      </g>\n    );\n  };\n\n  const pieChart = useMemo(() => {\n    if (!workday) {\n      return null;\n    }\n    const pieData = Object.entries(\n      datasetWithBackfill.find((e) => e.day === workday.toString()) ?? {}\n    )\n      .map(([key, val]) => ({ name: key, value: Number.parseInt(val) }))\n      .filter((v) => v.name !== \"day\")\n      .sort((v) => v.value);\n\n    return (\n      <div style={{ display: \"block\" }}>\n        <PieChart width={800} height={800}>\n          <Pie\n            activeIndex={activeStatus}\n            activeShape={renderActiveShape}\n            dataKey=\"value\"\n            isAnimationActive={false}\n            data={pieData}\n            cx={400}\n            cy={400}\n            outerRadius={200}\n            innerRadius={165}\n            onMouseEnter={(data, index) => setActiveStatus(index)}\n            fill=\"#8884d8\"\n          >\n            {pieData.map((entry, index) => (\n              <Cell key={index} fill={getColor(entry.name)} />\n            ))}\n          </Pie>\n          <Tooltip offset={100} />\n        </PieChart>\n        <h2>以上饼图：号段{selectedCenter + \"20\" + workday + \"5XXXX\"}</h2>\n      </div>\n    );\n  }, [activeStatus, datasetWithBackfill, workday, selectedCenter]);\n\n  const chart = useMemo(\n    () => (\n      <LineChart width={1440} height={810} data={datasetWithBackfill}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"day\" />\n        <YAxis\n          type=\"number\"\n          height={810}\n          domain={[0, countValueForAllDays.max() ?? 1]}\n        />\n        <Tooltip\n          offset={100}\n          itemSorter={(a) => -a.payload[nullthrows(a.dataKey?.toString())]}\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Line\n            key={ind}\n            type=\"linear\"\n            isAnimationActive={false}\n            dataKey={s}\n            stroke={getColor(s)}\n          />\n        ))}\n      </LineChart>\n    ),\n    [datasetWithBackfill, existStatus, countValueForAllDays]\n  );\n  const barChart = useMemo(() => {\n    const CustomTooltip: ContentRenderer<TooltipProps> = ({\n      payload,\n      label,\n    }) => {\n      const todayTotal =\n        todayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n      const prevdayTotal =\n        previousDayCount\n          .get(label as string)\n          ?.reduce((a, b) => a + (b as number), 0) ?? 1;\n\n      return (\n        <div style={{ backgroundColor: \"#F0F8FF\" }}>\n          <p>{`${label}`}</p>\n          {(payload ?? []).map((p) => {\n            const prevDay = (previousDayCount\n              .get(label as string)\n              ?.get(p.dataKey as string) ?? 0) as number;\n            return (\n              <p style={{ color: p.fill, marginBottom: \"3px\" }}>{`${\n                p.dataKey\n              }: ${p.value} of ${todayTotal} (${(\n                (100 * (p.value as number)) /\n                todayTotal\n              ).toFixed(\n                2\n              )}%), Previous day: ${prevDay} of ${prevdayTotal},  (${(\n                (100 * prevDay) /\n                prevdayTotal\n              ).toFixed(2)}%)`}</p>\n            );\n          })}\n        </div>\n      );\n    };\n\n    return (\n      <BarChart\n        height={1440}\n        width={810}\n        data={datasetWithBackfill}\n        layout=\"vertical\"\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          type=\"number\"\n          dataKey=\"day\"\n          domain={[0, countValueForAllDays.max() ?? 1]}\n        />\n        <YAxis\n          type=\"category\"\n          dataKey=\"day\"\n          domain={[(exisitDays.min() ?? 0) - 1, (exisitDays.max() ?? 1) + 1]}\n          tick={true}\n          interval={0}\n          allowDecimals={true}\n          ticks={exisitDays.toArray()}\n        />\n        <Tooltip\n          offset={100}\n          content={CustomTooltip}\n          itemSorter={(a) =>\n            -existStatus.indexOf(nullthrows(a.dataKey) as string)\n          }\n        />\n        {existStatus.toArray().map((s, ind) => (\n          <Bar\n            key={ind}\n            isAnimationActive={false}\n            dataKey={s}\n            stackId=\"a\"\n            fill={getColor(s)}\n          />\n        ))}\n      </BarChart>\n    );\n  }, [\n    previousDayCount,\n    datasetWithBackfill,\n    countValueForAllDays,\n    exisitDays,\n    existStatus,\n    todayCount,\n  ]);\n\n  const introduction = (\n    <div>\n      <h1>USCIS case progress tracker</h1>\n      <p>\n        Current Form: <strong>{selectedForm}</strong>,<br /> location:{\" \"}\n        <strong>{selectedCenter}</strong> ,<br /> Last Update for this form and\n        location:\n        <strong>\n          {latestUpdateDay\n            ? new Date(\n                86400000 * latestUpdateDay + 3600 * 1000 * 7\n              ).toDateString()\n            : \"Not Exist currently\"}\n        </strong>\n      </p>\n      <h3>Help needed for UI and clawer</h3>\n      <p>\n        GitHub project:\n        <a\n          href=\"https://github.com/vicdus/uscis-case-statistics/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://github.com/vicdus/uscis-case-statistics/\n        </a>\n      </p>\n    </div>\n  );\n\n  const updateDayPicker = availableUpdateDays.max() ? (\n    <Grid item xs={8}>\n      <Slider\n        style={{ marginLeft: \"128px\", marginRight: \"128px\" }}\n        defaultValue={availableUpdateDays.max() ?? 1}\n        onChange={(_, f) => setSelectedUpdateDay(f.toString())}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={null}\n        marks={availableUpdateDays\n          .map((e) => ({\n            value: e,\n            label:\n              1 +\n              new Date(86400000 * e + 3600 * 1000 * 7).getMonth() +\n              \"/\" +\n              new Date(86400000 * e + 3600 * 1000 * 7).getDate(),\n          }))\n          .toArray()}\n        min={availableUpdateDays.min() ?? 0}\n        max={availableUpdateDays.max() ?? 1}\n      />\n    </Grid>\n  ) : null;\n\n  const QA = (\n    <div>\n      <h3>Q and A</h3>\n      <h4>Q: 怎么用？</h4>\n      <p>A: 横坐标是号段，纵坐标是状态对应的数量。</p>\n      <h4>Q: 什么是号段？</h4>\n      <p>A: 这张图里的working day number</p>\n      <img\n        alt=\"day-explain\"\n        src=\"https://www.am22tech.com/wp-content/uploads/2018/12/uscis-receipt-number-status-i797-notice-truvisa.jpg\"\n      />\n      <h4>Q: 你是谁？</h4>\n      <p>A: 我今年抽中了h1b, 在等approve</p>\n      <h4>Q: 数据来源？</h4>\n      <p>A: 枚举号段下所有可能的case number并爬取USCIS, 保存成文件</p>\n      <h4>Q: 没有我的号段的数据？</h4>\n      <p>A: 可能需要地里大家一起来爬并更新，稍后放出步骤</p>\n      <h4>Q: 为什么是文件？为什么不用数据库？</h4>\n      <p>A: 贫穷</p>\n      <h4>Q: 这个很有用，可以请你喝杯咖啡吗？</h4>\n      <p>A: 感谢！</p>\n      <img\n        src={WeChatDonation}\n        alt=\"wechat_donation\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n\n      <h4>Q: 我想和你聊一聊？</h4>\n      <p>A: 加我微信吧！</p>\n      <img\n        src={WechatQR}\n        alt=\"wechat\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n      <h4>Q: 还有别的问题想讨论？</h4>\n      <p>\n        A: 微信群和\n        <a\n          href=\"https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=636011\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          一亩三分地的帖子\n        </a>\n        ，请帮我加点大米：）\n      </p>\n      <img\n        src={WechatGroupQR}\n        alt=\"wechat_group\"\n        style={{ width: \"400px\", height: \"560px\" }}\n      />\n    </div>\n  );\n\n  const facebookCommentPlugin = (\n    <FacebookProvider appId=\"185533902045623\">\n      <Comments href=\"https://vicdus.github.io/uscis-case-statistics/\" />\n    </FacebookProvider>\n  );\n\n  const formTypeSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Form Type</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedForm}\n        onChange={(e) => setSearchParam(\"form\", e.target.value)}\n        row={true}\n      >\n        {formTypes\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  const centerSelector = (\n    <FormControl fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">Center</FormLabel>\n      <RadioGroup\n        aria-label=\"form\"\n        name=\"form\"\n        value={selectedCenter}\n        onChange={(e) => setSearchParam(\"center\", e.target.value)}\n        row={true}\n      >\n        {centerNames\n          .toArray()\n          .sort()\n          .map((f, ind) => (\n            <FormControlLabel\n              key={ind}\n              value={f}\n              control={<Radio />}\n              label={f}\n            />\n          ))}\n      </RadioGroup>\n    </FormControl>\n  );\n\n  return (\n    <div>\n      {introduction}\n      {formTypeSelector}\n      {centerSelector}\n      {caseIDInput}\n      {pieChart}\n      {updateDayPicker}\n      {barChart}\n      {chart}\n      {updateDayPicker}\n      {QA}\n      {facebookCommentPlugin}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}